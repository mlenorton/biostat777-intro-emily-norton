---
title: "Example analysis"

---

Load libraries
```{r}
library(here)
library(tidyverse)

```
Question: How are bird visitors changing over time? Explored by total number over time (standardized by number of bird feeders/sites) and most common birds changing over time?

Load data from TidyTuesday dataset for 30 years of birdwatching:

```{r}
rds_files <- c("feederwatch.RDS","site_data.RDS")

# Check if any of these files don't exist
if (any(!file.exists(here("data", rds_files)))) {
  dir.create(here("data"))
# if missing, download the data
feederwatch <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-01-10/PFW_2021_public.csv')
site_data <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-01-10/PFW_count_site_data_public_2021.csv')

# and save the data objects as RDS files
saveRDS(feederwatch, file = here("data","feederwatch.RDS"))
saveRDS(site_data, file = here("data","site_data.RDS"))
}

feederwatch <- readRDS(here("data","feederwatch.RDS"))
feederwatch_og <- feederwatch
site_data <- readRDS(here("data","site_data.RDS"))
site_data_og <- site_data

```

Clean up data:

Potential issues to address: 
1. Convert longitude to oE (if we want to map the sites)


```{r}
low_lat <- which(feederwatch$latitude<0)
feederwatch <- feederwatch[-low_lat,]
hist(feederwatch$latitude)

feederwatch_df <- feederwatch %>%
  mutate(Date = ymd(paste(Year, Month, Day, sep="-")),
         lat_band = case_when(
           latitude < 35 ~ "low",
           latitude >=35 & latitude < 45 ~ "mid",
           latitude >= 45 ~ "high"
         ))


# Note: this is over all locations in the dataset, but maybe we want to chunk it by latitude (to catch some of the migrators?)
bird_count_per_day <- feederwatch_df %>%
  group_by(Date, lat_band) %>%
  summarize(total = sum(how_many),
            count = n(),
            std_total = total/count)


bird_count_per_bird <- feederwatch_df %>%
  group_by(species_code) %>%
  summarize(total = sum(how_many),
            count = n(),
            std_total = total/count) %>%
  arrange(desc(std_total))



# Figure 1
bird_count_per_day %>%
  ggplot(aes(x=Date, y = std_total, color = lat_band)) +   # TODO: add year in x-axis
  geom_smooth() +   # loess-smoother is default
  theme_minimal() +   
  labs(y = "Number of birds / sighting", 
       title = "Bird sightings per latitude band over time", 
       color = "Latitude band", 
       subtitle = "Birds are most commonly sighted at high latitudes, \nbut become more frequent in low latitudes in the winter", 
       caption = "Data: Project FeederWatch")





# Result: seeing more birds in the winter at all latitudes (perhaps because they are coming to the feeders more),
# but this is especially true for low latitudes - perhaps this is observed because of migration patterns


# Explore information for most abundant birds


```

Explore trends in total number of birds and number of feeders/reports over time?

```{r}
glimpse(feederwatch)
summary(feederwatch)

length(unique(feederwatch$species_code))


# potential issues

```



Add my example analysis here that meets the following requirements:

A data analysis page called ‘Example analysis’. You can pick any dataset you wish you analyze. In this webpage, you will analyze a dataset and summarize the results. The requirements for this webpage are the following:
You must describe what is the question you aim to answer with the data and data analysis.
You must describe who is the intended audience for the data analysis.
You must describe and link to where the original data come from that you chose.
You must include a link to a data dictionary for the data or create one inside the webpage.
Your analysis must include some minimal form of data wrangling with you using at least five different functions from dplyr or tidyr.
Your analysis should include at least three plots with you using at least three different geom_*() functions from ggplot2 (or another package with geom_*() functions).
Plots should have titles, subtitles, captions, and human-understandable axis labels.
At least one plot should using a type of faceting (facet_grid() or facet_wrap()).
Your analysis must include one image or table (not one you created yourself, but one you have saved locally or one from the web).
Your analysis must include at least two different callout blocks.
Your analysis must include a .bib file, which you use to reference at least three unique citations. For example, it could be to a website or paper from where the original data came from or it could be to a paper describing a method you are using to analyze the data.
Your analysis must include the use of at least 1 margin content.
You must summarize your analysis and/or results with a paragraph (4-6 sentences).
At the end of the data analysis, list out each of the functions you used from each of the packages (dplyr, tidyr, and ggplot2) to help the TA with respect to making sure you met all the requirements described above.