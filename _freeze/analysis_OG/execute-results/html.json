{
  "hash": "d3260215326d69c2d2418150e1275a1a",
  "result": {
    "markdown": "---\ntitle: \"Example analysis\"\n\n---\n\n\nLoad libraries\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at /Users/emilynorton/Documents/GradSchool/Year2_Term2/Stat_programming/biostat777-intro-emily-norton\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nAttaching package: 'maps'\n\n\nThe following object is masked from 'package:purrr':\n\n    map\n\n\nLoading required package: RColorBrewer\n```\n:::\n:::\n\nQuestion: How are bird visitors changing over time and space? Explored by total number over time (standardized by number of bird feeders/sites) and most common birds changing over time?\n\nLoad data from TidyTuesday dataset for 30 years of birdwatching:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrds_files <- c(\"feederwatch.RDS\",\"site_data.RDS\")\n\n# Check if any of these files don't exist\nif (any(!file.exists(here(\"data\", rds_files)))) {\n  dir.create(here(\"data\"))\n# if missing, download the data\nfeederwatch <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-01-10/PFW_2021_public.csv')\nsite_data <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-01-10/PFW_count_site_data_public_2021.csv')\n\n#data_dict <- readr::read_table(\"https://docs.google.com/spreadsheets/d/1kHmx2XhA2MJtEyTNMpwqTQEnoa9M7Il2/edit#gid=2040245914\")  # this doesn't work...but we can save the species_codes dictionary and load them individually\n\n# and save the data objects as RDS files\nsaveRDS(feederwatch, file = here(\"data\",\"feederwatch.RDS\"))\nsaveRDS(site_data, file = here(\"data\",\"site_data.RDS\"))\n}\n\nfeederwatch <- readRDS(here(\"data\",\"feederwatch.RDS\"))\nfeederwatch_og <- feederwatch\nsite_data <- readRDS(here(\"data\",\"site_data.RDS\"))\nsite_data_og <- site_data\nspecies_codes_dd <- read_csv(here(\"data\",\"FeederWatch_Data_Dictionary_Species_Codes.csv\"),skip = 1)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 15966 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (11): SPECIES_CODE, SCI_NAME, PRIMARY_COM_NAME, PRI_COM_NAME_INDXD, AUTH...\ndbl  (4): AUTHORITY_VER, TAXON_ORDER, EXTINCT, EXTINCT_YEAR\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\nNote: Data dictionary available here:\nhttps://drive.google.com/file/d/1kHmx2XhA2MJtEyTNMpwqTQEnoa9M7Il2/view\n\nClean up data:\n\nPotential issues to address: \n1. Convert longitude to oE (if we want to map the sites)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check for outliers \nlow_lat <- which(feederwatch$latitude<0)   # length=1; this point appears to be erroneous\nhigh_lat <- which(feederwatch$latitude>50) # these are not erroneous, but want to narrow to US for plotting later on\n\nfeederwatch <- feederwatch[-low_lat,]\nhist(feederwatch$latitude)\n```\n\n::: {.cell-output-display}\n![](analysis_OG_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfeederwatch_df <- feederwatch %>%\n  mutate(Date = ymd(paste(Year, Month, Day, sep=\"-\")),\n         lat_band = case_when(\n           latitude < 35 ~ \"low\",\n           latitude >=35 & latitude < 45 ~ \"mid\",\n           latitude >= 45 ~ \"high\"\n         ))\n\n\n# Note: this is over all locations in the dataset, but maybe we want to chunk it by latitude (to catch some of the migrators?)\nbird_count_per_day <- feederwatch_df %>%\n  group_by(Date, lat_band) %>%\n  summarize(total = sum(how_many),\n            count = n(),\n            std_total = total/count)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Date'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n# Used to be \"common birds\" - i.e. birds that have high counts in the dataset - i.e. flocking birds\nabundant_birds <- feederwatch_df %>%\n  filter(latitude<50) %>%\n  group_by(species_code) %>%\n  summarize(total = sum(how_many),\n            count = n(),\n            std_total = total/count) %>%\n  arrange(desc(std_total)) %>%\n  head(n=9) %>%\n  left_join(species_codes_dd, by=join_by(species_code==SPECIES_CODE)) %>%\n  select(species_code, PRIMARY_COM_NAME, SCI_NAME, count)\n\n# Birds that have several records in the dataset\ncommonly_sighted_birds <- feederwatch_df %>%\n  group_by(species_code) %>%\n  summarize(total = sum(how_many),\n            count = n(),\n            std_total = total/count) %>%\n  arrange(desc(count)) %>%\n  head(n=9) %>%\n  left_join(species_codes_dd, by=join_by(species_code==SPECIES_CODE)) %>%\n  select(species_code, PRIMARY_COM_NAME, SCI_NAME, count)\n\n# # Rare birds - note: this is not comprehensive - lots (!!!) of rare birds!\n# rarely_sighted_birds <- feederwatch_df %>%\n#   group_by(species_code) %>%\n#   summarize(total = sum(how_many),\n#             count = n(),\n#             std_total = total/count) %>%\n#   arrange(count) %>%\n#   head(n=10) %>%\n#   left_join(species_codes_dd, by=join_by(species_code==SPECIES_CODE)) %>%\n#   select(species_code, PRIMARY_COM_NAME, SCI_NAME, count)\n\n\n\n  \n# # stacked barchart of most common species? - too diverse, can't see any interesting trends - maybe plot avg # of species observed?\n# feederwatch_df %>%\n#   group_by(species_code, Month) %>%    # TODO: I want the total number to be shown (as \"other\") but only the top ~15 labeled\n#   summarize(num_sighted = sum(how_many)) %>%\n#   ungroup() %>%\n#   full_join(species_codes_dd, by=join_by(species_code==SPECIES_CODE)) %>%\n#   mutate(PRIMARY_COM_NAME = case_when(\n#     !(species_code %in% common_birds$species_code) ~ \"other\",\n#     TRUE ~ PRIMARY_COM_NAME)) %>%\n#  # filter(species_code %in% common_birds$species_code) %>%\n#   ggplot(aes(x=Month, y = num_sighted, fill=PRIMARY_COM_NAME)) +   # TODO: add year in x-axis\n#   geom_col() +\n#   labs(y = \"Total number of birds sighted\")\n\n# # Check diversity over time -  not interesting\n# num_species_per_day <- feederwatch_df %>%\n#   group_by(Date) %>%\n#   summarize(species_count = length(unique(species_code)),\n#             n_obs = n()) %>%\n#   ungroup() %>%\n#   mutate(Month = month(Date),\n#          dom = day(Date),\n#          std_species_count = species_count/n_obs) %>%\n#   ggplot(aes(x = dom, y = species_count)) +\n#   geom_col() +\n#   facet_wrap(Month~.)\n\n\n# # See where the most common birds were spotted?\nabundant_birds_df <- feederwatch_df %>%\n   filter(species_code %in% abundant_birds$species_code) %>%\n   left_join(species_codes_dd, by=join_by(species_code==SPECIES_CODE)) %>%\n   mutate(Month=factor(Month, levels=c(\"11\",\"12\",\"1\",\"2\",\"3\",\"4\")))\n\n # TODO: make this! START EHRE!\ncommonly_sighted_birds_df <- feederwatch_df %>%\n   filter(species_code %in% commonly_sighted_birds$species_code) %>%\n   left_join(species_codes_dd, by=join_by(species_code==SPECIES_CODE)) %>%\n   mutate(Month=factor(Month, levels=c(\"11\",\"12\",\"1\",\"2\",\"3\",\"4\")))\n\n# rarely_sighted_birds_df <- feederwatch_df %>%\n#    filter(species_code %in% rarely_sighted_birds$species_code) %>%\n#    left_join(species_codes_dd, by=join_by(species_code==SPECIES_CODE))\n# \n# extinct_birds_inds <- which(species_codes_dd$EXTINCT==1)\n# extinct_birds_dd <- species_codes_dd[extinct_birds_inds,] \n\n# rarely sighted birds are often endangered birds:\n# e.g. bell's vireo - endangered\n# altamira oriole - threatened in Texas (which was where it was observed) ...\n# but in general, a lot of rare birds!\n\n\n# Figure 2 ? \n# understand frequency of different species, i.e., how many rare vs commonly sighted birds are there?\n# Lots of rarely sighted birds!\nfeederwatch_df %>%\n  group_by(species_code) %>%\n  summarize(n_obs = n()) %>%\n  ggplot() +\n  geom_histogram(aes(n_obs), boundary=0, closed=\"left\") +\n  labs(x = \"Number of observations for a given species\", \n       y = \"Frequency\", \n       title = \"Number of sightings per bird species\",\n       subtitle = \"Most bird species are only observed once. \\nA few common species are reported thousands of times.\",\n       caption = \"Data: ProjectFeederwatch\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](analysis_OG_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Fig 3 : Table of common birds?\n# tb <- table(commonly_sighted_birds$PRIMARY_COM_NAME)\n# wordcloud(names(tb))\n# wordcloud(words = commonly_sighted_birds$PRIMARY_COM_NAME[1:8], colors = brewer.pal(8, \"Greens\"), freq=commonly_sighted_birds$count[1:8])\n\n# TODO: Make table of common birds ()\ncommonly_sighted_birds_table <- commonly_sighted_birds %>%\n  select('Common name' = PRIMARY_COM_NAME,\n         'Scientific name' = SCI_NAME,\n         'Number of observations' = count)\n\n\n\n# Make faceted plot of where most common birds are spotted in US/Canada:\namerica_map <- map_data(\"world\", region='USA')\nUSA_map <-\n  ggplot(america_map, aes(x=long, y=lat, group=group)) +\n  geom_polygon(fill=\"white\",color=\"black\") + \n  scale_x_continuous(limits = c(-125,-65)) +\n  scale_y_continuous(limits = c(25, 50)) + \n  coord_map() +\n  theme_minimal()\n\n# Plot all sighting locations?\nunique_sighting_locations <- feederwatch %>%\n  group_by(loc_id) %>%\n  summarize(latitude=mean(latitude),\n            longitude=mean(longitude))\nUSA_map +\n  geom_point(data=unique_sighting_locations, aes(x = longitude, y = latitude, group=NULL))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 529 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](analysis_OG_files/figure-html/unnamed-chunk-3-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# Most abundant birds (i.e. probably largest flocks)\n# TODO: want to color by month of sighting?\n# Fig 2/3??\n# focus on birds in US (or below 50oN):\n\nmonth_colors = c(\"sandybrown\",\"indianred\",\"slateblue3\",\"royalblue\",\"palegreen3\")\n\n  USA_map +\n  geom_point(data = abundant_birds_df, aes(x = longitude, y = latitude, group=NULL, size=how_many, color=Month), alpha=0.5) +\n  #scale_fill_continuous(low=\"lightblue\", high=\"indianred4\", name=\"Count\") +\n    scale_color_manual(values=month_colors) +   # TODO: Fix this - color isn't using my color palette\n  theme_minimal() + \n  labs(x=\"Longitude (E)\", \n       y=\"Latitude (N)\", \n       title=\"Sighting locations for abundant birds in US and Canada\", \n       subtitle=\"Birds with the highest average abundance per sighting \\ntend to have limited distributions\", \n       size=\"Count per sighting\") +\n  facet_wrap(vars(PRIMARY_COM_NAME), labeller = labeller(PRIMARY_COM_NAME = label_wrap_gen(width = 10)))\n```\n\n::: {.cell-output-display}\n![](analysis_OG_files/figure-html/unnamed-chunk-3-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# Commonly sighted birds: TODO: 10 re-order factor, 2) change to intuitive color scheme, # THIS TAKES FOREVER TO DRAW...but it's neat! - Fig 3?? Just do it for the top 4 or so??? - TODO: Change color scheme - AND save image to load later! - reverse colorbar so that white = lower sightings and darker/richer color = more sightings?\n  \ncommon_birds_plot <- USA_map +\n#  ggplot(data = commonly_sighted_birds_df, aes(x = longitude, y = latitude, group=NULL, color=Month)) +\n  geom_bin_2d(data = commonly_sighted_birds_df, aes(x = longitude, y = latitude, group=NULL)) +\n  scale_fill_continuous(low=\"lightskyblue1\", high=\"indianred4\", name=\"Number of \\nsightings\") +\n  theme_minimal() + \n  labs(x=\"Longitude (E)\", \n       y=\"Latitude (N)\", \n       title=\"Sightings of common birds in the US and southern Canada\", \n       subtitle=\"Common bird species are most frequently observed in the Mid-Atlantic and \\nNortheast regions, likely due (in part) to a sampling bias and easy bird identification\",  # may not want to add all of this here??\n       color=\"Month\") +   # TODO: change legend title?? how? it's currently \"count\" - should be \"Number of sightings\"\n  facet_wrap(vars(PRIMARY_COM_NAME), labeller = labeller(PRIMARY_COM_NAME = label_wrap_gen(width = 10)))\n#ggsave(here(\"figs\",\"Commonly_sighted_birds.png\"), plot=common_birds_plot, width=7, height=7, units=\"in\")\n\n# \n# # Rare birds\n# USA_map +\n#   geom_point(data = rarely_sighted_birds_df, aes(x = longitude, y = latitude, group=NULL, color=as.factor(Month))) +\n#   #scale_fill_continuous(low=\"lightblue\", high=\"indianred4\", name=\"Count\") +\n#   theme_minimal() + \n#   labs(x=\"Longitude (E)\", \n#        y=\"Latitude (N)\", \n#        title=\"Sighting locations for abundant birds in US and Canada\", \n#        subtitle=\"Commonly observed birds\") +\n#   facet_wrap(vars(PRIMARY_COM_NAME), labeller = labeller(PRIMARY_COM_NAME = label_wrap_gen(width = 10)))\n# \n# amer_black_duck_df <- feederwatch_df %>%\n#   filter(species_code==\"ambduc\")\n\n\n\n# # Where does crime usually take place - set this as our average\n# plot_totalcrime_map <- data %>%\n#   ggplot(aes(x=Longitude, y = Latitude)) +\n#   geom_bin_2d(bins=100) +\n#   scale_fill_continuous(low=\"lightblue\", high=\"indianred4\", name=\"Count\") +\n#   theme_minimal() + \n#   labs(x=\"Longitude (E)\", y=\"Latitude (N)\", title=\"Number of reported crimes in Baltimore by location\")\n# ggsave(filename = \"plot_totalcrime_map_blue_red_100bins.png\", plot=plot_totalcrime_map, path=\"./Figs/Maps/\", width = 5, height = 4, units = \"in\") \n\n\n\n\n\n\n# test <- feederwatch_df %>%\n#   filter(Date==\"2020-11-14\")\n# \n# \n# %>%\n#   group_by(Date) %>%\n#   summarize(obs_count = n()) %>%\n#   ungroup() %>%\n#   mutate(std_species_count = species_count/obs_count) %>%\n#   arrange(desc(std_total)) %>%\n#   head(n=10) %>%\n#   left_join(species_codes, by=join_by(species_code==SPECIES_CODE)) %>%\n#   select(species_code, PRIMARY_COM_NAME)\n\n\n\n# Figure 1\nbird_count_per_day %>%\n  ggplot(aes(x=Date, y = std_total, color = lat_band)) +   # TODO: add year in x-axis\n  geom_smooth() +   # loess-smoother is default\n  theme_minimal() +   \n  labs(y = \"Number of birds / sighting\", \n       title = \"Bird sightings per latitude band over time\", \n       color = \"Latitude band\", \n       subtitle = \"Birds are most commonly sighted at high latitudes, \\nbut become more frequent in low latitudes in the winter\", \n       caption = \"Data: Project FeederWatch\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](analysis_OG_files/figure-html/unnamed-chunk-3-5.png){width=672}\n:::\n\n```{.r .cell-code}\n# # Figure 2 - # most common birds plotted by month...don't like this one either\n# feederwatch_df %>%\n#   filter(species_code %in% common_birds$species_code) %>%\n#   group_by(species_code, Month) %>%\n#   summarize(num_per_sighting = sum(how_many)/n()) %>%\n#   ungroup() %>%\n#   left_join(species_codes_dd, by=join_by(species_code==SPECIES_CODE)) %>%\n#   ggplot(aes(x=Month, y = num_per_sighting)) +   # TODO: add year in x-axis\n#   geom_col() +\n#   facet_wrap(vars(PRIMARY_COM_NAME), nrow=5, ncol=5) \n  \n\n\n\n\n\n# Result: seeing more birds in the winter at all latitudes (perhaps because they are coming to the feeders more),\n# but this is especially true for low latitudes - perhaps this is observed because of migration patterns\n\n\n# Explore information for most abundant birds\n```\n:::\n\n\nExplore trends in total number of birds and number of feeders/reports over time?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(feederwatch)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 99,999\nColumns: 22\n$ loc_id             <chr> \"L981010\", \"L3161698\", \"L13210778\", \"L13258348\", \"L…\n$ latitude           <dbl> 52.12976, 43.83221, 39.72147, 42.21787, 32.74992, 4…\n$ longitude          <dbl> -122.13547, -123.09240, -75.93366, -83.67230, -79.9…\n$ subnational1_code  <chr> \"CA-BC\", \"US-OR\", \"US-MD\", \"US-MI\", \"US-SC\", \"CA-QC…\n$ entry_technique    <chr> \"POSTCODE LAT/LONG LOOKUP\", \"/GOOGLE_MAP/ZOOM:18\", …\n$ sub_id             <chr> \"S83206450\", \"S78031190\", \"S81318993\", \"S79251313\",…\n$ obs_id             <chr> \"OBS1092604618\", \"OBS1036509564\", \"OBS1073386105\", …\n$ Month              <dbl> 3, 12, 2, 1, 1, 3, 1, 4, 11, 1, 1, 4, 3, 11, 1, 2, …\n$ Day                <dbl> 4, 19, 13, 13, 11, 13, 23, 23, 28, 2, 30, 22, 25, 1…\n$ Year               <dbl> 2021, 2020, 2021, 2021, 2021, 2021, 2021, 2021, 202…\n$ PROJ_PERIOD_ID     <chr> \"PFW_2021\", \"PFW_2021\", \"PFW_2021\", \"PFW_2021\", \"PF…\n$ species_code       <chr> \"amegfi\", \"moudov\", \"tuftit\", \"houspa\", \"balori\", \"…\n$ how_many           <dbl> 20, 11, 2, 2, 10, 2, 5, 2, 6, 9, 2, 1, 2, 1, 10, 1,…\n$ valid              <dbl> 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, …\n$ reviewed           <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ day1_am            <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ day1_pm            <dbl> 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ day2_am            <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, …\n$ day2_pm            <dbl> 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, …\n$ effort_hrs_atleast <dbl> 1.001, 1.001, 8.001, 4.001, 1.001, 1.001, 0.001, 4.…\n$ snow_dep_atleast   <dbl> 5.000, 0.000, 5.000, 0.000, 0.000, 15.001, 0.000, 0…\n$ Data_Entry_Method  <chr> \"PFW Web 4.1.4\", \"PFW Web 4.1.4\", \"PFW Web 4.1.4\", …\n```\n:::\n\n```{.r .cell-code}\nsummary(feederwatch)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    loc_id             latitude       longitude       subnational1_code \n Length:99999       Min.   :21.42   Min.   :-157.95   Length:99999      \n Class :character   1st Qu.:38.36   1st Qu.: -93.34   Class :character  \n Mode  :character   Median :41.14   Median : -80.63   Mode  :character  \n                    Mean   :40.71   Mean   : -87.06                     \n                    3rd Qu.:43.33   3rd Qu.: -76.09                     \n                    Max.   :65.52   Max.   : -52.73                     \n                                                                        \n entry_technique       sub_id             obs_id              Month       \n Length:99999       Length:99999       Length:99999       Min.   : 1.000  \n Class :character   Class :character   Class :character   1st Qu.: 2.000  \n Mode  :character   Mode  :character   Mode  :character   Median : 3.000  \n                                                          Mean   : 5.144  \n                                                          3rd Qu.:11.000  \n                                                          Max.   :12.000  \n                                                                          \n      Day             Year      PROJ_PERIOD_ID     species_code      \n Min.   : 1.00   Min.   :2020   Length:99999       Length:99999      \n 1st Qu.: 9.00   1st Qu.:2020   Class :character   Class :character  \n Median :16.00   Median :2021   Mode  :character   Mode  :character  \n Mean   :16.16   Mean   :2021                                        \n 3rd Qu.:23.00   3rd Qu.:2021                                        \n Max.   :31.00   Max.   :2021                                        \n                                                                     \n    how_many           valid           reviewed          day1_am      \n Min.   :  1.000   Min.   :0.0000   Min.   :0.00000   Min.   :0.0000  \n 1st Qu.:  1.000   1st Qu.:1.0000   1st Qu.:0.00000   1st Qu.:1.0000  \n Median :  2.000   Median :1.0000   Median :0.00000   Median :1.0000  \n Mean   :  3.707   Mean   :0.9934   Mean   :0.00333   Mean   :0.9117  \n 3rd Qu.:  4.000   3rd Qu.:1.0000   3rd Qu.:0.00000   3rd Qu.:1.0000  \n Max.   :500.000   Max.   :1.0000   Max.   :1.00000   Max.   :1.0000  \n                                                                      \n    day1_pm          day2_am          day2_pm       effort_hrs_atleast\n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.001     \n 1st Qu.:1.0000   1st Qu.:1.0000   1st Qu.:1.0000   1st Qu.:1.001     \n Median :1.0000   Median :1.0000   Median :1.0000   Median :1.001     \n Mean   :0.7867   Mean   :0.8916   Mean   :0.7749   Mean   :1.778     \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.001     \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :8.001     \n                                                    NA's   :161       \n snow_dep_atleast Data_Entry_Method \n Min.   : 0.000   Length:99999      \n 1st Qu.: 0.000   Class :character  \n Median : 0.000   Mode  :character  \n Mean   : 2.098                     \n 3rd Qu.: 0.001                     \n Max.   :15.001                     \n NA's   :8876                       \n```\n:::\n\n```{.r .cell-code}\nlength(unique(feederwatch$species_code))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 361\n```\n:::\n\n```{.r .cell-code}\n# potential issues\n```\n:::\n\n\n\n\nAdd my example analysis here that meets the following requirements:\n\nA data analysis page called ‘Example analysis’. You can pick any dataset you wish you analyze. In this webpage, you will analyze a dataset and summarize the results. The requirements for this webpage are the following:\nYou must describe what is the question you aim to answer with the data and data analysis.\nYou must describe who is the intended audience for the data analysis.\nYou must describe and link to where the original data come from that you chose.\nYou must include a link to a data dictionary for the data or create one inside the webpage.\nYour analysis must include some minimal form of data wrangling with you using at least five different functions from dplyr or tidyr.\nYour analysis should include at least three plots with you using at least three different geom_*() functions from ggplot2 (or another package with geom_*() functions).\nPlots should have titles, subtitles, captions, and human-understandable axis labels.\nAt least one plot should using a type of faceting (facet_grid() or facet_wrap()).\nYour analysis must include one image or table (not one you created yourself, but one you have saved locally or one from the web).\nYour analysis must include at least two different callout blocks.\nYour analysis must include a .bib file, which you use to reference at least three unique citations. For example, it could be to a website or paper from where the original data came from or it could be to a paper describing a method you are using to analyze the data.\nYour analysis must include the use of at least 1 margin content.\nYou must summarize your analysis and/or results with a paragraph (4-6 sentences).\nAt the end of the data analysis, list out each of the functions you used from each of the packages (dplyr, tidyr, and ggplot2) to help the TA with respect to making sure you met all the requirements described above.",
    "supporting": [
      "analysis_OG_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}